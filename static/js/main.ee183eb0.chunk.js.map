{"version":3,"sources":["components/Search.js","components/Profile.js","components/RepoInfo.js","components/Repos.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","padding","margin","search","position","borderRadius","shape","backgroundColor","fade","palette","common","black","marginLeft","breakpoints","up","spacing","searchIcon","height","pointerEvents","display","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","Search","props","classes","Paper","elevation","className","Typography","variant","style","gutterBottom","InputBase","placeholder","input","inputProps","onChange","e","setUserSearch","target","value","box","globalBox","marginBottom","box1","box2","box3","image","maxWidth","maxHeight","linkGithub","textDecoration","Profile","user","Grid","container","item","xs","md","src","avatar_url","alt","href","html_url","Button","Box","clsx","innerBox","public_repos","public_gists","followers","box4","following","TableContainer","component","Table","aria-label","TableBody","TableRow","TableCell","scope","company","blog","location","created_at","substring","minWidth","RepoInfo","forks_count","watchers_count","stargazers_count","linkRepo","Repos","reposUrl","useState","latestRepos","setLatestRepos","useEffect","axios","get","then","res","data","catch","err","updatedLatestRepos","length","slice","map","repo","rel","name","align","id","flexDirection","App","userSearch","selectedUser","setSelectedUser","showMsg","setShowMsg","setTimeout","Container","Alert","severity","repos_url","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee183eb0.chunk.js","sourcesContent":["import React from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport {fade} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"90%\",\r\n        padding: \"10px\",\r\n        margin: \"10px 0\"\r\n    },\r\n\r\n\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.black, 0.15),\r\n        // backgroundColor: \"#2196f3\",\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.black, 0.25),\r\n        },\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(1),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            width: '12ch',\r\n            '&:focus': {\r\n                width: '20ch',\r\n            },\r\n        },\r\n    },\r\n}));\r\n\r\nconst Search = (props) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.root}>\r\n            <h2>Search Github Users</h2>\r\n            <Typography variant=\"subtitle1\" style={{ color: \"#9e9e9e\" }} gutterBottom>Enter a username to fetch user profile info and repos.</Typography>\r\n            <div className={classes.search}>\r\n                <div className={classes.searchIcon}>\r\n                    <SearchIcon />\r\n                </div>\r\n                <InputBase\r\n                    placeholder=\"Search…\"\r\n                    classes={{\r\n                        root: classes.inputRoot,\r\n                        input: classes.inputInput,\r\n                    }}\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onChange={e => props.setUserSearch(e.target.value)}\r\n                />\r\n            </div>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport clsx from \"clsx\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: \"10px 0\",\r\n        width: \"90%\",\r\n        padding: \"15px\"\r\n    },\r\n    box: {\r\n        width: '20%',\r\n        backgroundColor: \"red\",\r\n        borderRadius: \"5px\",\r\n        padding: \"2px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"#fff\",\r\n        margin: \"0 3px\"\r\n    },\r\n    globalBox: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"8px\"\r\n    },\r\n    box1: {\r\n        backgroundColor: \"blue\"\r\n    },\r\n    box2: {\r\n        backgroundColor: \"orange\"\r\n    },\r\n    box3: {\r\n        backgroundColor: \"#ccc\"\r\n    },\r\n    image: {\r\n        maxWidth: \"180px\",\r\n        maxHeight: \"180px\"\r\n    },\r\n    linkGithub: {\r\n        textDecoration: 'none'\r\n    }\r\n}))\r\n\r\nconst Profile = ({user}) => {\r\n    const classes = useStyles()\r\n\r\n    if (!user) {\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.root}>\r\n            <Grid container spacing={3}>\r\n                <Grid item xs={12} md={3}>\r\n                    <img className={classes.image} src={`${user.avatar_url}`} alt=\"\"/>\r\n                    <br/>\r\n                    <a href={`${user.html_url}`} className={classes.linkGithub}>\r\n                        <Button style={{borderRadius: \"12px\"}} variant=\"contained\" color=\"primary\">\r\n                            View Profile\r\n                        </Button>\r\n                    </a>\r\n                </Grid>\r\n                <Grid item xs={12} md={9}>\r\n                    <Box className={classes.globalBox}>\r\n                        <Box className={clsx(classes.box, classes.box1)}>\r\n                            <Typography className={classes.innerBox} variant=\"caption\" display=\"block\" gutterBottom>\r\n                                public repos: {user.public_repos}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box className={clsx(classes.box, classes.box2)}>\r\n                            <Typography className={classes.innerBox} variant=\"caption\" display=\"block\" gutterBottom>\r\n                                public gists: {user.public_gists}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box className={clsx(classes.box, classes.box3)}>\r\n                            <Typography className={classes.innerBox} variant=\"caption\" display=\"block\" gutterBottom>\r\n                                followers: {user.followers}\r\n                            </Typography>\r\n                        </Box>\r\n                        <Box className={clsx(classes.box, classes.box4)}>\r\n                            <Typography className={classes.innerBox} variant=\"caption\" display=\"block\" gutterBottom>\r\n                                following: {user.following}\r\n                            </Typography>\r\n                        </Box>\r\n                    </Box>\r\n\r\n                    <TableContainer component={Paper}>\r\n                        <Table aria-label=\"simple table\">\r\n                            <TableBody>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        Company: {user.company ? user.company : \"No Company\"}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        Website/blog: {user.blog}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        Location: {user.location}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                                <TableRow>\r\n                                    <TableCell scope=\"row\">\r\n                                        Member\r\n                                        Since: {user.created_at ? user.created_at.substring(0, 10) : user.created_at}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            </TableBody>\r\n                        </Table>\r\n                    </TableContainer>\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport Box from \"@material-ui/core/Box\";\r\nimport clsx from \"clsx\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    box: {\r\n        width: '20%',\r\n        minWidth: \"10%\",\r\n        backgroundColor: \"red\",\r\n        borderRadius: \"5px\",\r\n        padding: \"2px\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        color: \"#fff\",\r\n        margin: \"0 3px\"\r\n    },\r\n    globalBox: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        marginBottom: \"8px\"\r\n    },\r\n    box1: {\r\n        backgroundColor: \"blue\"\r\n    },\r\n    box2: {\r\n        backgroundColor: \"orange\"\r\n    },\r\n    box3: {\r\n        backgroundColor: \"#ccc\"\r\n    }\r\n}))\r\n\r\n\r\nconst RepoInfo = ({ forks_count, watchers_count, stargazers_count }) => {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <Box className={classes.globalBox}>\r\n            <Box className={clsx(classes.box, classes.box1)}>\r\n                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                    Stars: { stargazers_count }\r\n                </Typography>\r\n            </Box>\r\n            <Box className={clsx(classes.box, classes.box2)}>\r\n                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                    Watchers: { watchers_count }\r\n                </Typography>\r\n            </Box>\r\n            <Box className={clsx(classes.box, classes.box3)}>\r\n                <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n                    Forks: { forks_count }\r\n                </Typography>\r\n            </Box>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default RepoInfo;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport RepoInfo from \"./RepoInfo\";\r\nimport axios from \"axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: \"90%\",\r\n        padding: \"10px\",\r\n        margin: \"10px 0\"\r\n    },\r\n    linkRepo: {\r\n        textDecoration: 'none'\r\n    }\r\n}))\r\n\r\n\r\nconst Repos = ({ reposUrl }) => {\r\n    const classes = useStyles()\r\n\r\n    const [latestRepos, setLatestRepos] = useState([])\r\n\r\n    useEffect(() => {\r\n        axios.get(`${reposUrl}?client_id=d9308aacf8b204d361fd&client_secret=84969aeef73956f4ec9e8716d1840532802bb81b`)\r\n            .then(res => {\r\n                setLatestRepos(res.data)\r\n            })\r\n            .catch(err => {\r\n\r\n            })\r\n    }, [reposUrl])\r\n\r\n\r\n    if(!latestRepos){\r\n        return <p>Loading...</p>\r\n    }\r\n\r\n    let updatedLatestRepos = latestRepos\r\n    if(latestRepos.length > 5){\r\n        updatedLatestRepos = latestRepos.slice(5)\r\n        setLatestRepos(updatedLatestRepos)\r\n    }\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.root}>\r\n            <h2>Latest Repos</h2>\r\n\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableBody>\r\n                        { latestRepos.map(repo => (\r\n                            <TableRow key={repo.id}>\r\n                                <TableCell scope=\"row\">\r\n                                    <a className={classes.linkRepo} href={`${repo.html_url}`} rel=\"noopener noreferrer\" target='_blank'>{ repo.name }</a>\r\n                                </TableCell>\r\n                                <TableCell scope=\"row\" align=\"right\">\r\n                                    <RepoInfo forks_count={repo.forks_count} watchers_count={repo.watchers_count} stargazers_count={repo.stargazers_count} />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        )) }\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </Paper>\r\n    );\r\n};\r\n\r\nexport default Repos;\r\n","import './App.css';\nimport React, {useEffect, useState} from \"react\";\nimport axios from 'axios'\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport Container from \"@material-ui/core/Container\";\nimport Search from \"./components/Search\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Profile from \"./components/Profile\";\nimport Repos from \"./components/Repos\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n}));\n\nfunction App() {\n    const classes = useStyles()\n\n    const [userSearch, setUserSearch] = useState('')\n    const [selectedUser, setSelectedUser] = useState({})\n\n    const [showMsg, setShowMsg] = useState(true)\n\n    setTimeout(() => {\n        setShowMsg(false)\n    }, 15000)\n\n    useEffect(() => {\n        axios.get(`https://api.github.com/users/${userSearch}?client_id=d9308aacf8b204d361fd&client_secret=84969aeef73956f4ec9e8716d1840532802bb81b`)\n            .then(res => {\n                setSelectedUser(res.data)\n            })\n            .catch(err => {\n\n            })\n    }, [userSearch])\n\n    if(!selectedUser){\n        return <p>Loading...</p>\n    }\n\n    return (\n        <Container className={classes.root}>\n            <h2>Github Finder</h2>\n            { showMsg && <Alert severity=\"warning\">The app may broke at some time, Github API limits requests number per hour and per day  — The problem is not in the app itself!</Alert> }\n            <Search setUserSearch={setUserSearch} />\n            <Profile user={selectedUser} />\n            { selectedUser.repos_url && <Repos reposUrl={selectedUser.repos_url}/> }\n        </Container>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}